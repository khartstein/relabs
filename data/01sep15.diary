log saving to: "/home/kevin/studies/relabs/data/01sep15.log"
diary saving to: "/home/kevin/studies/relabs/data/01sep15.diary"
2015-09-01 16:45:23/63608431523891.062 | event: log              | info: started


PTB-INFO: This is Psychtoolbox-3 for GNU/Linux X11, under Matlab 64-Bit (Version 3.0.12 - Build date: Apr 18 2015).
PTB-INFO: Support status on this operating system release: Linux 3.16.0-46-generic Supported.
PTB-INFO: Type 'PsychtoolboxVersion' for more detailed version information.
PTB-INFO: Most parts of the Psychtoolbox distribution are licensed to you under terms of the MIT License, with
PTB-INFO: some restrictions. See file 'License.txt' in the Psychtoolbox root folder for the exact licensing conditions.

PTB-INFO: NVIDIA Corporation - GK107M [GeForce GT 650M Mac Edition] GPU found. Trying to establish low-level access...
PTB-INFO: Connected to NVidia GK107M [GeForce GT 650M Mac Edition] GPU of NV-0e0 family with 4 display heads. Beamposition timestamping enabled.
PTB-INFO: Many graphics cards do not support proper timing and timestamping of visual stimulus onset
PTB-INFO: when running in windowed mode (non-fullscreen). If PTB aborts with 'Synchronization failure'
PTB-INFO: you can disable the sync test via call to Screen('Preference', 'SkipSyncTests', 2); .
PTB-INFO: You won't get proper stimulus onset timestamps though, so windowed mode may be of limited use.
PTB-INFO: Failed to enable realtime-scheduling [Operation not permitted]!
PTB-INFO: You need to run Matlab or Octave with root-privileges, or run the script PsychLinuxConfiguration once for this to work.
PTB-INFO: Failed to enable realtime-scheduling [Operation not permitted]!
PTB-INFO: You need to run Matlab or Octave with root-privileges, or run the script PsychLinuxConfiguration once for this to work.


PTB-INFO: OpenGL-Renderer is NVIDIA Corporation :: GeForce GT 650M/PCIe/SSE2 :: 4.4.0 NVIDIA 340.76
PTB-INFO: VBL startline = 1800 , VBL Endline = 1851
PTB-INFO: Measured monitor refresh interval from beamposition = 16.669161 ms [59.991020 Hz].
PTB-INFO: Will use beamposition query for accurate Flip time stamping.
PTB-INFO: Measured monitor refresh interval from VBLsync = 16.670239 ms [59.987141 Hz]. (58 valid samples taken, stddev=1.173138 ms.)
PTB-INFO: Reported monitor refresh interval from operating system = 16.669723 ms [59.988998 Hz].
PTB-INFO: Small deviations between reported values are normal and no reason to worry.

WARNING: Couldn't compute a reliable estimate of monitor refresh interval! Trouble with VBL syncing?!?


----- ! PTB - ERROR: SYNCHRONIZATION FAILURE ! ----

One or more internal checks (see Warnings above) indicate that synchronization
of Psychtoolbox to the vertical retrace (VBL) is not working on your setup.

This will seriously impair proper stimulus presentation and stimulus presentation timing!
Please read 'help SyncTrouble' for information about how to solve or work-around the problem.
You can force Psychtoolbox to continue, despite the severe problems, by adding the command
Screen('Preference', 'SkipSyncTests', 1); at the top of your script, if you really know what you are doing.


PTB-INFO: Support for fast OffscreenWindows enabled.
2015-09-01 16:45:26/63608431526841.211 | event: window           | info: opened main
2015-09-01 16:45:27/63608431527016.773 | event: flip             | info: show start
2015-09-01 16:45:27/63608431527024.703 | event: experiment       | info: using default block order
2015-09-01 16:45:27/63608431527047.953 | event: experiment       | info: Setting nCorrect to 0

ra = 

  <a href="matlab:helpPopup RelAbs" style="font-weight:bold">RelAbs</a> with properties:

         Experiment: [1x1 PTB.Experiment]
          colorIcon: [64x64x4 uint8]
         numberIcon: [64x64x4 uint8]
    orientationIcon: [64x64x4 uint8]
          shapeIcon: [64x64x4 uint8]
             reward: 20
             parent: []
           children: {}
               type: 'relabs'

ra.Run2
Next run (default=1): 
2015-09-01 16:45:33/63608431533449.703 | event: experiment       | info: run 1 start
2015-09-01 16:45:33/63608431533484.406 | event: flip             | info: waiting for scanner
2015-09-01 16:45:33/63608431533550.375 | event: experiment       | info: rest
2015-09-01 16:45:33/63608431533651.102 | event: flip             | info: block 1, type: level one | same
2015-09-01 16:45:33/63608431533656.141 | event: experiment       | info: waiting (for prompt HRF decay)
{Operation terminated by user during <a href="matlab:helpUtils.errorDocCallback('ismember>ismemberR2012a', '/home/kevin/matlab/toolbox/matlab/ops/ismember.m', 488)" style="font-weight:bold">ismember>ismemberR2012a</a> (<a href="matlab: opentoline('/home/kevin/matlab/toolbox/matlab/ops/ismember.m',488,0)">line 488</a>)


In <a href="matlab:helpUtils.errorDocCallback('ismember', '/home/kevin/matlab/toolbox/matlab/ops/ismember.m', 71)" style="font-weight:bold">ismember</a> (<a href="matlab: opentoline('/home/kevin/matlab/toolbox/matlab/ops/ismember.m',71,0)">line 71</a>)
    [varargout{1:nlhs}] = ismemberR2012a(varargin{:});

In <a href="matlab:helpUtils.errorDocCallback('PTB.Device.Serial/Check', '/home/kevin/matlab/matlab_lib/research/+PTB/+Device/@Serial/Check.m', 49)" style="font-weight:bold">PTB.Device.Serial/Check</a> (<a href="matlab: opentoline('/home/kevin/matlab/matlab_lib/research/+PTB/+Device/@Serial/Check.m',49,0)">line 49</a>)
	b	= ismember(PTBIFO.serial.buffer_data,d);

In <a href="matlab:helpUtils.errorDocCallback('PTB.Device.Scanner/TR', '/home/kevin/matlab/matlab_lib/research/+PTB/+Device/@Scanner/TR.m', 19)" style="font-weight:bold">PTB.Device.Scanner/TR</a> (<a href="matlab: opentoline('/home/kevin/matlab/matlab_lib/research/+PTB/+Device/@Scanner/TR.m',19,0)">line 19</a>)
	[d,tTrigger]	= scn.parent.Serial.Check(scn.SCANNER_TRIGGER);

In <a href="matlab:helpUtils.errorDocCallback('PTB.Sequence/Linear>@()seq.parent.Scanner.TR()', '/home/kevin/matlab/matlab_lib/research/+PTB/@Sequence/Linear.m', 76)" style="font-weight:bold">PTB.Sequence/Linear>@()seq.parent.Scanner.TR()</a> (<a href="matlab: opentoline('/home/kevin/matlab/matlab_lib/research/+PTB/@Sequence/Linear.m',76,0)">line 76</a>)
		fNowTR			= @() seq.parent.Scanner.TR();

In <a href="matlab:helpUtils.errorDocCallback('PTB.Sequence/Linear', '/home/kevin/matlab/matlab_lib/research/+PTB/@Sequence/Linear.m', 177)" style="font-weight:bold">PTB.Sequence/Linear</a> (<a href="matlab: opentoline('/home/kevin/matlab/matlab_lib/research/+PTB/@Sequence/Linear.m',177,0)">line 177</a>)
		tNow			= fNow();

In <a href="matlab:helpUtils.errorDocCallback('PTB.Show/Sequence', '/home/kevin/matlab/matlab_lib/research/+PTB/@Show/Sequence.m', 206)" style="font-weight:bold">PTB.Show/Sequence</a> (<a href="matlab: opentoline('/home/kevin/matlab/matlab_lib/research/+PTB/@Show/Sequence.m',206,0)">line 206</a>)
	[varargout{1:nargout}]	= shw.parent.Sequence.Linear(cF,tShow,...

In <a href="matlab:helpUtils.errorDocCallback('RelAbs/Trial', '/home/kevin/studies/relabs/code/@RelAbs/Trial.m', 117)" style="font-weight:bold">RelAbs/Trial</a> (<a href="matlab: opentoline('/home/kevin/studies/relabs/code/@RelAbs/Trial.m',117,0)">line 117</a>)
[tStart,tEnd,tShow,bAbort,kResponse, tResponse] = ra.Experiment.Show.Sequence(...

In <a href="matlab:helpUtils.errorDocCallback('RelAbs/Run2/DoBlock', '/home/kevin/studies/relabs/code/@RelAbs/Run2.m', 153)" style="font-weight:bold">RelAbs/Run2/DoBlock</a> (<a href="matlab: opentoline('/home/kevin/studies/relabs/code/@RelAbs/Run2.m',153,0)">line 153</a>)
        resCur = ra.Trial(blockType, kTrial, tNow);

In <a href="matlab:helpUtils.errorDocCallback('PTB.Sequence/Linear', '/home/kevin/matlab/matlab_lib/research/+PTB/@Sequence/Linear.m', 199)" style="font-weight:bold">PTB.Sequence/Linear</a> (<a href="matlab: opentoline('/home/kevin/matlab/matlab_lib/research/+PTB/@Sequence/Linear.m',199,0)">line 199</a>)
			tSeq(kS)	= cF{kS}(tNowRel,tNext);

In <a href="matlab:helpUtils.errorDocCallback('RelAbs/Run2', '/home/kevin/studies/relabs/code/@RelAbs/Run2.m', 66)" style="font-weight:bold">RelAbs/Run2</a> (<a href="matlab: opentoline('/home/kevin/studies/relabs/code/@RelAbs/Run2.m',66,0)">line 66</a>)
	[tStartActual,tEndActual,tSequenceActual] = ra.Experiment.Sequence.Linear(...
} 
ra.End
